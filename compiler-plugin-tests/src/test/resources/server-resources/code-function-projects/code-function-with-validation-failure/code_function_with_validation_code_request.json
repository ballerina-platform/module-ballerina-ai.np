{
  "usecase": "An `external` function with the `@code` Ballerina annotation needs to be replaced at\ncompile-time with the code necessary to achieve the requirement specified as the `prompt`\nfield in the annotation.\n\nAs a skilled Ballerina programmer, you have to generate the code to do this for the calculateTotalPrice function.\nThe following prompt defines the requirement:\n\n```\nCalculate the total price of items by summing up valid prices\n                        (above the minimum price), applying a discount if the subtotal exceeds a threshold,\n                        and adding tax calculated based on the total after discount\n```\n\nYour task is to generate a function named 'calculateTotalPriceNPGenerated' with the code that is needed to satisfy this user\nprompt.\n\nThe 'calculateTotalPriceNPGenerated' function should have exactly the same signature as the 'calculateTotalPrice' function.\nUse only the parameters passed to the function and module-level clients that are clients from the ballerina and ballerinax module in the generated code.\nDo not use any configurable variables or module-level variables defined in the program.\n\nRespond with ONLY THE GENERATED FUNCTION AND ANY IMPORTS REQUIRED BY THE GENERATED FUNCTION.\n",
  "sourceFiles": [
    {
      "filePath": "main.bal",
      "content": "import ballerina/io;\n\nconfigurable decimal taxRate = 0.08;\nconfigurable decimal discountThreshold = 100.00;\n\npublic final decimal DISCOUNT_RATE = 0.1;\npublic final decimal MINIMUM_ITEM_PRICE = 1.00;\n\npublic function calculateTotalPrice(decimal[] itemPrices) returns decimal = @code {\n                prompt: string `Calculate the total price of items by summing up valid prices\n                        (above the minimum price), applying a discount if the subtotal exceeds a threshold,\n                        and adding tax calculated based on the total after discount`\n} external;\n\npublic function main() {\n    decimal[] itemPrices = [25.50, 15.75, 40.00, 19.99, 12.49];\n    decimal total = calculateTotalPrice(itemPrices);\n    io:println(\"Total price: \", total);\n}\n"
    }
  ]
}
